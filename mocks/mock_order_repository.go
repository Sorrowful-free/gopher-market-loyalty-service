// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repositories/order_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/Sorrowful-free/gopher-market-loyalty-service/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockOrderRepository is a mock of OrderRepository interface.
type MockOrderRepository struct {
	ctrl     *gomock.Controller
	recorder *MockOrderRepositoryMockRecorder
}

// MockOrderRepositoryMockRecorder is the mock recorder for MockOrderRepository.
type MockOrderRepositoryMockRecorder struct {
	mock *MockOrderRepository
}

// NewMockOrderRepository creates a new mock instance.
func NewMockOrderRepository(ctrl *gomock.Controller) *MockOrderRepository {
	mock := &MockOrderRepository{ctrl: ctrl}
	mock.recorder = &MockOrderRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderRepository) EXPECT() *MockOrderRepositoryMockRecorder {
	return m.recorder
}

// CreateOrder mocks base method.
func (m *MockOrderRepository) CreateOrder(userID, order string) (models.OrderModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrder", userID, order)
	ret0, _ := ret[0].(models.OrderModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrder indicates an expected call of CreateOrder.
func (mr *MockOrderRepositoryMockRecorder) CreateOrder(userID, order interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrder", reflect.TypeOf((*MockOrderRepository)(nil).CreateOrder), userID, order)
}

// GetOrder mocks base method.
func (m *MockOrderRepository) GetOrder(orderID string) (models.OrderModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrder", orderID)
	ret0, _ := ret[0].(models.OrderModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrder indicates an expected call of GetOrder.
func (mr *MockOrderRepositoryMockRecorder) GetOrder(orderID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrder", reflect.TypeOf((*MockOrderRepository)(nil).GetOrder), orderID)
}

// GetOrdersList mocks base method.
func (m *MockOrderRepository) GetOrdersList(userID string) ([]models.OrderModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrdersList", userID)
	ret0, _ := ret[0].([]models.OrderModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrdersList indicates an expected call of GetOrdersList.
func (mr *MockOrderRepositoryMockRecorder) GetOrdersList(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrdersList", reflect.TypeOf((*MockOrderRepository)(nil).GetOrdersList), userID)
}
